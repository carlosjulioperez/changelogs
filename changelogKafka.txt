Kafka

	+ Spring Boot + Apache Kafka Course - The Practical Guide
		* Download kafka
		https://kafka.apache.org/quickstart
		
		# Start the ZooKeeper service
		$ bin/zookeeper-server-start.sh config/zookeeper.properties

		# Start the Kafka broker service
		$ bin/kafka-server-start.sh config/server.properties

		https://start.spring.io/

		Spring kafka documentation
		https://docs.spring.io/spring-kafka/docs/current/reference/html/
		3 Introduction
		3.1 Quick tour

		<dependency>
		  <groupId>org.springframework.kafka</groupId>
		  <artifactId>spring-kafka</artifactId>
		  <version>3.0.12</version>
		</dependency>

		STEP 5: READ THE EVENTS
		$ bin/kafka-console-consumer.sh --topic quickstart-events --from-beginning --bootstrap-server localhost:9092
		$ bin/kafka-console-consumer.sh --topic javaguides --from-beginning --bootstrap-server localhost:9092
		$ bin/kafka-console-consumer.sh --topic javaguides_json --from-beginning --bootstrap-server localhost:9092
		$ bin/kafka-console-consumer.sh --topic wikimedia_recentchange --from-beginning --bootstrap-server localhost:9092

		okhttp eventsource maven
		https://mvnrepository.com/artifact/com.launchdarkly/okhttp-eventsource
		2.5.0

		jackson json maven
		https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
		2.13.2

		https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
		2.13.5 (vulnerability -> 2.13.2)

		<dependencies>
			<!-- https://mvnrepository.com/artifact/com.launchdarkly/okhttp-eventsource -->
			<dependency>
				<groupId>com.launchdarkly</groupId>
				<artifactId>okhttp-eventsource</artifactId>
				<version>2.5.0</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp -->
			<dependency>
				<groupId>com.squareup.okhttp3</groupId>
				<artifactId>okhttp</artifactId>
				<version>4.9.3</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>2.13.2</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>2.13.5</version>
			</dependency>
		</dependencies>

		https://mvnrepository.com/search?q=okhttp
		https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
		4.9.3

		https://stream.wikimedia.org/v2/stream/recentchange

	
	+ kafka-for-developers-using-spring-boot
		https://github.com/dilipsundarraj1/kafka-for-developers-using-spring-boot/blob/master/SetUpKafka3.md

		Start up the Zookeeper.
			$ ./zookeeper-server-start.sh ../config/zookeeper.properties

		Add the below properties in the server.properties
			listeners=PLAINTEXT://localhost:9092
			auto.create.topics.enable=false

		Start up the Kafka Broker
			$ ./kafka-server-start.sh ../config/server.properties

		How to create a topic ?
			$ ./kafka-topics.sh --create --topic test-topic --replication-factor 1 --partitions 4 --bootstrap-server localhost:9092

		How to instantiate a Console Producer?
			Without Key
			$ ./kafka-console-producer.sh --broker-list localhost:9092 --topic test-topic

			With Key
			$ ./kafka-console-producer.sh --broker-list localhost:9092 --topic test-topic --property "key.separator=-" --property "parse.key=true"

		How to instantiate a Console Consumer?
			Without Key
			$ ./kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test-topic --from-beginning

			With Key
			$ ./kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test-topic --from-beginning -property "key.separator= - " --property "print.key=true"

			With Consumer Group
			$ ./kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test-topic --group <group-name>


		List the topics in a cluster
			$ ./kafka-topics.sh --bootstrap-server localhost:9092 --list

		How to view consumer groups
			$ ./kafka-consumer-groups.sh --bootstrap-server localhost:9092 --list

	+ Confluence:
		Event-driven architecture:
			https://developer.ibm.com/articles/advantages-of-an-event-driven-architecture/

		git clone --branch 5.5.0-v1.1.0 https://github.com/confluentinc/training-fundamentals-src.git ~/confluent-fundamentals
			You are in 'detached HEAD' state. You can look around, make experimental
			changes and commit them, and you can discard any commits you make in this
			state without impacting any branches by switching back to a branch.

			If you want to create a new branch to retain commits you create, you may
			do so (now or later) by using -c with the switch command. Example:

			  git switch -c <new-branch-name>

			Or undo this operation with:

			  git switch -

			Turn off this advice by setting config variable advice.detachedHead to false


