Vim

	* IDE:
		Instalar tmux
		Instalar ack.vim
		+ Buscar texto en archivos:
			:Ack texto
		+ Cambiar de carpeta:
			:cd ~/code/cjerp
		+ Buscar archivos:
			:e find **/*/DocumentoElectronico
		+ Mover window:
			https://superuser.com/questions/343572/how-do-i-reorder-tmux-windows
			:swap-window -s 3 -t 1
			to let window number 3 and window number 1 swap their positions.

	* Activar la sintaxis:
		:syntax enable
	* Tamaño de ventana:
		if has("gui_running")
		  " GUI is running or is about to start.
		  " Maximize gvim window (for an alternative on Windows, see simalt below).
		  set lines=50 columns=120
		else
		  " This is console Vim.
		  if exists("+lines")
		    set lines=50
		  endif
		  if exists("+columns")
		    set columns=100
		  endif
		endif

	* Cambiar el directorio de trabajo a la ruta actual del archivo:
		http://vim.wikia.com/wiki/Set_working_directory_to_the_current_file

		:pwd
		:lcd %:p:h

	* Forzar coloreo de sintaxis a html en un archivo zul por ejemplo:
		:set syntax=html

	* Colores:
		:color
		:highlight Normal ctermfg=grey ctermbg=darkblue

	* Alineación y tabs:
		+ Agregar en .vimrc:

			filetype plugin indent on
			" show existing tab with 4 spaces width
			set tabstop=4
			" when indenting with '>', use 4 spaces width
			set shiftwidth=4
			" On pressing tab, insert 4 spaces
			set expandtab

	* Impedir cortar a 80 caracteres por línea:
		set formatoptions=

		https://vi.stackexchange.com/questions/2784/how-to-stop-gvim-wrapping-text-at-column-80
	
	* Agregar texto al final de cada línea:
		+ Agregar una coma:
			:%s/$/,/
		
		+ Agregar en selección el string ");" :
			:'<,'>s/$/);/


	* Contar matching en seleccion:
		http://vim.wikia.com/wiki/Count_number_of_matches_of_a_pattern

		:'<,'>s/,//gn
		
		Busca las veces que aparece la coma en la selección de texto

	* Ordenar en selección:
		:'<,'>sort

	* Encoding:
		:e ++enc=utf-8
		:e ++enc=ISO-8859-1 
		:write ++enc=utf-8 russian.txt

	* Números de línea:
		https://www.cyberciti.biz/faq/vi-show-line-numbers/
		:set number
		:set nu

	* Copiar la ruta del aarchivo:
		1 + Ctrl + G file's path
	
		https://stackoverflow.com/questions/17498144/yank-file-path-with-line-no-from-vim-to-system-clipboard
			:let @+=expand("%") . ':' . line(".")

	* Alineación en archivos CSV:
		https://github.com/junegunn/vim-plug
		https://www.reddit.com/r/vim/comments/3ikyu0/align_columns_in_csv_files/
	
	* Borrar espacios en columnas:
		http://vim.wikia.com/wiki/Remove_unwanted_spaces
		:%s/\s\+$//
		En una selección obviar :% antes de s/ ...

	* Alinear texto:
		https://github.com/godlygeek/tabular
		Usar Tabularize

			Before:
			one = 1
			two = 2
			three = 3
			four = 4
			
			Running :Tab /= produces:
			
			one   = 1
			two   = 2
			three = 3
			four  = 4

		EaseyAlign enter * =
		https://github.com/junegunn/vim-easy-align

		http://vim.wikia.com/wiki/Simple_text_alignment
			a=1;
			foo=2;
			longstring=1;
			c=2
			
			to
			
			a          =1;
			foo        =2;
			longstring =1;
			c          =2;
			This is how we achieve it
			
			0f=20i<Space><Esc>020lvf=hx

	* Alineación:
		https://github.com/sk1418/Join

		EaseyAlign, * =
		Seleccionar texto y reemplazar espacio por vaciós <>s, ,,g
		:J ', ' 10
		
		OBJ_MEDICAL_CENTER     
		OBJ_GENERAL_TABLE      
		OBJ_PROVINCE           
		OBJ_CANTON             
		OBJ_PERSON             
		OBJ_PATIENT            
		OBJ_HEALTH_PROFESSIONAL
		OBJ_MEDICAMENT         
		OBJ_DISEASE            
		OBJ_PRESCRIPTION       
		
		if (Security.hasAnyObject( Security.OBJ_MEDICAL_CENTER, Security.OBJ_GENERAL_TABLE, Security.OBJ_PROVINCE, Security.OBJ_CANTON, Security.OBJ_PERSON, Security.OBJ_PATIENT, Security.OBJ_HEALTH_PROFESSIONAL, Security.OBJ_MEDICAMENT, Security.OBJ_DISEASE, Security.OBJ_PRESCRIPTION, Security.OBJ_ALL) ) {

	* deshabilitar sql-completion vim:
		Agregar en .vimrc:
			let g:loaded_sql_completion = 0

