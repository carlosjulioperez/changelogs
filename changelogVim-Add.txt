Vim
	* Borrar un rango de líneas:
		:19,29d

	* Comentar texto:
		https://github.com/tomtom/tcomment_vim

		$ cd .vim
		$ mkdir -p pack/tml/start
		$ cd pack/tml/start
		$ git clone https://github.com/tomtom/tcomment_vim

	* vim autocomplete Java:
		https://github.com/artur-shaik/vim-javacomplete2
		
		$ cd ~/.vim/bundle
		$ git clone https://github.com/artur-shaik/vim-javacomplete2.git

	* Mostrar archivo como xml:
		https://stackoverflow.com/questions/7600860/getting-vim-to-recognize-xml
		:set filetype=xml

	* Desactivar los números de línea
		https://stackoverflow.com/questions/8322931/how-to-take-off-line-numbers-in-vi#8322955
		:set nonu
		:set nu!

	* Tema gruvbox:
		+ En vim:
		https://github.com/morhetz/gruvbox/wiki/Installation
		git clone https://github.com/morhetz/gruvbox.git ~/.vim/bundle/gruvbox

	* IDE:
		Instalar tmux

		+ Buscar texto en archivos:
			https://github.com/mileszs/ack.vim

			$ git clone https://github.com/mileszs/ack.vim.git ~/.vim/bundle/ack.vim
			:Ack texto

		+ Cambiar de carpeta:
			:cd ~/code/cjerp
		+ Buscar archivos:
			https://stackoverflow.com/questions/3554719/find-a-file-via-recursive-directory-search-in-vim
			:e **/test/Suite.java
			:e find **/*/DocumentoElectronico

		+ FindFile:
			https://stackoverflow.com/questions/6852763/vim-quickfix-list-launch-files-in-new-tab
			https://vim.fandom.com/wiki/Searching_for_files

			+ Agregar en .vimrc:
			set switchbuf+=newtab
			
			" find files and populate the quickfix list
			fun! FindFiles(filename)
			  let error_file = tempname()
			  silent exe '!find . -name "'.a:filename.'" | xargs file | sed "s/:/:1:/" > '.error_file
			  set errorformat=%f:%l:%m
			  exe "cfile ". error_file
			  copen
			  call delete(error_file)
			endfun
			command! -nargs=1 FindFile call FindFiles(<q-args>)

		+ Mover window:
			https://superuser.com/questions/343572/how-do-i-reorder-tmux-windows
			:swap-window -s 3 -t 1
			to let window number 3 and window number 1 swap their positions.

	* NerdTree:
		El motivo principal de que no se vea correctamente los separadores de carpeta y archivos de NerdTree es por el locale.
		Esto lo genera OSX.

		https://serverfault.com/questions/320971/centos-6-and-locale-error

		$ sudo vim /etc/ssh/ssh_config
		Host *
		    #SendEnv LANG LC_*

		Esta es la solución secundaria.
		https://stackoverflow.com/questions/8753286/nerd-tree-enter-does-not-open-sub-dirs
		Agregar en .vimrc:
		let g:NERDTreeDirArrows=0

		Y desde consola:
		export LC_CTYPE=en_US.UTF-8
		export LC_ALL=en_US.UTF-8

	* Activar la sintaxis:
		:syntax enable
	* Tamaño de ventana:
		if has("gui_running")
		  " GUI is running or is about to start.
		  " Maximize gvim window (for an alternative on Windows, see simalt below).
		  set lines=50 columns=120
		else
		  " This is console Vim.
		  if exists("+lines")
		    set lines=50
		  endif
		  if exists("+columns")
		    set columns=100
		  endif
		endif

	* Cambiar el directorio de trabajo a la ruta actual del archivo:
		http://vim.wikia.com/wiki/Set_working_directory_to_the_current_file

		:pwd
		:lcd %:p:h

	* Forzar coloreo de sintaxis a html en un archivo zul por ejemplo:
		:set syntax=html

	* Colores:
		:color
		:highlight Normal ctermfg=grey ctermbg=darkblue

	* Alineación y tabs:
		+ Agregar en .vimrc:

			filetype plugin indent on
			" show existing tab with 4 spaces width
			set tabstop=4
			" when indenting with '>', use 4 spaces width
			set shiftwidth=4
			" On pressing tab, insert 4 spaces
			set expandtab

	* Impedir cortar a 80 caracteres por línea:
		set formatoptions=

		https://vi.stackexchange.com/questions/2784/how-to-stop-gvim-wrapping-text-at-column-80
	
	* Agregar texto al final de cada línea:
		+ Agregar una coma:
			:%s/$/,/
		
		+ Agregar en selección el string ");" :
			:'<,'>s/$/);/


	* Contar matching en seleccion:
		http://vim.wikia.com/wiki/Count_number_of_matches_of_a_pattern

		:'<,'>s/,//gn
		
		Busca las veces que aparece la coma en la selección de texto

	* Ordenar en selección:
		:'<,'>sort

	* Encoding:
		:e ++enc=utf-8
		:e ++enc=ISO-8859-1 
		:write ++enc=utf-8 russian.txt

	* Números de línea:
		https://www.cyberciti.biz/faq/vi-show-line-numbers/
		:set number
		:set nu

	* Copiar la ruta del aarchivo:
		1 + Ctrl + G file's path
	
		https://stackoverflow.com/questions/17498144/yank-file-path-with-line-no-from-vim-to-system-clipboard
			:let @+=expand("%") . ':' . line(".")

	* Alineación en archivos CSV:
		https://github.com/junegunn/vim-plug
		https://www.reddit.com/r/vim/comments/3ikyu0/align_columns_in_csv_files/
	
	* Borrar espacios en columnas:
		http://vim.wikia.com/wiki/Remove_unwanted_spaces
		:%s/\s\+$//
		En una selección obviar :% antes de s/ ...

	* Alinear texto:
		https://github.com/godlygeek/tabular
		Usar Tabularize

			Before:
			one = 1
			two = 2
			three = 3
			four = 4
			
			Running :Tab /= produces:
			
			one   = 1
			two   = 2
			three = 3
			four  = 4

		EaseyAlign enter * =
		https://github.com/junegunn/vim-easy-align

		http://vim.wikia.com/wiki/Simple_text_alignment
			a=1;
			foo=2;
			longstring=1;
			c=2
			
			to
			
			a          =1;
			foo        =2;
			longstring =1;
			c          =2;
			This is how we achieve it
			
			0f=20i<Space><Esc>020lvf=hx

	* Alineación:
		https://github.com/sk1418/Join

		EasyAlign, * =
		Seleccionar texto y reemplazar espacio por vaciós <>s, ,,g
		:J ', ' 10
		
		OBJ_MEDICAL_CENTER     
		OBJ_GENERAL_TABLE      
		OBJ_PROVINCE           
		OBJ_CANTON             
		OBJ_PERSON             
		OBJ_PATIENT            
		OBJ_HEALTH_PROFESSIONAL
		OBJ_MEDICAMENT         
		OBJ_DISEASE            
		OBJ_PRESCRIPTION       
		
		if (Security.hasAnyObject( Security.OBJ_MEDICAL_CENTER, Security.OBJ_GENERAL_TABLE, Security.OBJ_PROVINCE, Security.OBJ_CANTON, Security.OBJ_PERSON, Security.OBJ_PATIENT, Security.OBJ_HEALTH_PROFESSIONAL, Security.OBJ_MEDICAMENT, Security.OBJ_DISEASE, Security.OBJ_PRESCRIPTION, Security.OBJ_ALL) ) {

		https://codeyarns.com/2015/04/08/easy-align-plugin-for-vim/

		To align text based on space characters as delimiter:
		
		Align on first delimiter: EasyAlign \
		Align on second delimiter: EasyAlign 2\
		Align on last delimiter: EasyAlign -\
		Align on last 2 delimiters: EasyAlign -2\
		Align on all delimiters: EasyAlign *\

	* deshabilitar sql-completion vim:
		Agregar en .vimrc:
			let g:loaded_sql_completion = 0

