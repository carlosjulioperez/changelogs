plugins {
	id 'org.springframework.boot' version '2.5.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'ec.carper'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'

	implementation 'commons-io:commons-io:2.6'
	implementation 'commons-validator:commons-validator:1.7'
	implementation 'org.passay:passay:1.0'
    implementation 'com.google.guava:guava:20.0' 

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'junit:junit:4.13'

	//testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
	// Testing exclude
	//exclude '**/UserServiceControllerTest.class'
}

tasks.register('uberJar', Jar) {
    archiveClassifier = 'uber'
    from sourceSets.main.output
    dependsOn configurations.runtimeClasspath
	duplicatesStrategy = 'include'
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }
		.collect { zipTree(it) }
    }
}