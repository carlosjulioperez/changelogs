Raspbian
	$ sudo apt install xiphos openfortivpn audacious virt-viewer flameshot bleachbit keepassx vim-gtk3 xpad thunar stopwatch silversearcher-ag imagemagick youtube-dl graphviz meld ack fzf gtk-recordmydesktop telegram-desktop retext 
	
	+ Instalar dark theme:
	https://www.youtube.com/watch?v=gHUjO6MK5fg
	$ sudo apt install arc-theme papirus-icon-theme breeze-cursor-theme

	Ejecutar: lxappearance
	Control: Arc-Dark
	Tema de iconos: Papirus-Dark
	Cursor del ratón: Brisa
	Borde de la ventana: Arc-Dark

	+ Después de instalar pi-apps y MacOS theme:
	$ sudo apt install openfortivpn virt-viewer keepassx vim-gtk3 stopwatch silversearcher-ag imagemagick graphviz meld ack fzf

	+ Dependencias de wine para box86:
	$ sudo apt install winbind

	+ vscode:
	impedir blank screen
	$ code --disable-gpu

	+ UniqueBible:
	https://github.com/eliranwong/UniqueBible/wiki/Install-on-Linux

	$ sudo apt install -y make build-essential python3 python-setuptools
	python3-pip python3-dev python3-venv libssl-dev libffi-dev libnss3
	zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm
	libncurses5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev
		liblzma-dev

	$ pip3 install --upgrade setuptools
	$ pip3 install PyQtWebEngine

	https://forum.qt.io/topic/112813/installing-pyside2-on-raspberry-pi/2
	$ sudo apt-get install python3-pyside2.qt3dcore python3-pyside2.qt3dinput
	python3-pyside2.qt3dlogic python3-pyside2.qt3drender
	python3-pyside2.qtcharts python3-pyside2.qtconcurrent python3-pyside2.qtcore
	python3-pyside2.qtgui python3-pyside2.qthelp python3-pyside2.qtlocation
	python3-pyside2.qtmultimedia python3-pyside2.qtmultimediawidgets
	python3-pyside2.qtnetwork python3-pyside2.qtopengl
	python3-pyside2.qtpositioning python3-pyside2.qtprintsupport
	python3-pyside2.qtqml python3-pyside2.qtquick python3-pyside2.qtquickwidgets
	python3-pyside2.qtscript python3-pyside2.qtscripttools
	python3-pyside2.qtsensors python3-pyside2.qtsql python3-pyside2.qtsvg
	python3-pyside2.qttest python3-pyside2.qttexttospeech
	python3-pyside2.qtuitools python3-pyside2.qtwebchannel
	python3-pyside2.qtwebsockets python3-pyside2.qtwidgets
	python3-pyside2.qtx11extras python3-pyside2.qtxml
	python3-pyside2.qtxmlpatterns python3-pyside2uic

	$ sudo apt install pacman
	$ pacman -Qlq pyside2

	+ Instalar nim:
	https://snapcraft.io/install/nim-lang/raspbian#install
	
	$ sudo apt install snapd
	$ sudo reboot
	$ sudo snap install core
	$ sudo snap install nim-lang --classic
	$ sudo snap alias nim-lang.nim nim

	$ sudo snap install p7zip-desktop

	https://nim-by-exame.github.io/hello_world/
	Fibonacci 40:
	https://betterprogramming.pub/a-python-substitute-i-tried-out-the-best-programming-language-youve-never-heard-of-9e29cd1893c0
	https://www.youtube.com/watch?v=Hnxd_Fme51k
	
	proc fibonacci(n: int): int = 
		if n <= 1:
			return n
		return fibonacci(n-1) + fibonacci(n-2) 

	echo fibonacci 40

	$ nim c -r --verbosity:0 hello.nim 
	$ ls -l hello
	-rwxr-xr-x 1 pi pi 98392 Sep 11 23:48 hello

	$ time ./hello 
	102334155
	real	0m17.655s
	user	0m17.609s
	sys	0m0.011s

	Otra forma de compilación:
	https://nim-lang.org/docs/nimc.html
	$ nim c --cpu:arm --os:linux fibonacci.nim

	+ Instalar go:
	https://golang.org/dl/
	https://www.jeremymorgan.com/tutorials/raspberry-pi/install-go-raspberry-pi/
	https://gobyexample.com/hello-world
	Fibonacci:
	https://www.thepolyglotdeveloper.com/2016/12/fibonacci-sequence-printed-golang/

	package main

	import (
		"fmt"
	)

	func FibonacciRecursion(n int) int {
		if n <= 1 {
			return n
		}
		return FibonacciRecursion(n-1) + FibonacciRecursion(n-2)
	}

	func main() {
		fmt.Print( FibonacciRecursion(40) )
	}

	$ go build fibonacci.go
	$ ls -l fibonacci
	-rwxr-xr-x 1 pi pi 1752416 Sep 12 00:15 fibonacci
	$ time ./fibonacci 
	102334155
	real	0m2.560s
	user	0m2.555s
	sys	0m0.010s


	+ Instalación de webcam:
	Listar los dispositivos:
	pi@raspberrypi:~ $ arecord -l
	
	**** List of CAPTURE Hardware Devices ****
	card 1: Camera [HD Web Camera], device 0: USB Audio [USB Audio]
	Subdevices: 1/1
	Subdevice #0: subdevice #0
	card 2: UACDemoV10 [UACDemoV1.0], device 0: USB Audio [USB Audio]
	Subdevices: 1/1
	Subdevice #0: subdevice #0

	En mi caso tengo la webcam y los cascos usb.
	
	Grabo un audio desde el micrófono de la cámara:
	$ arecord -D plughw:1,0 camara.wav

	+ Actualizar lua:
	https://www.raspberrypi.org/forums/viewtopic.php?f=63&t=295145&p=1781013#p1781182

	$ mkdir -p /home/pi/.local/share/vlc/lua/playlist
	$ wget https://raw.githubusercontent.com/videolan/vlc/master/share/lua/playlist/youtube.lua -O ~/.local/share/vlc/lua/playlist/youtube.lua

	+ Listado de paquetes disponibles:
	$ sudo grep ^Package /var/lib/apt/lists/*_Packages | awk '{print $2}' | sort -u
	$ sudo grep ^Package /var/lib/apt/lists/*_Packages | awk '{print $2}' | sort -u | grep php

	$ sudo apt install dclock
	
	+ tor browser usando chromium:
	$ sudo apt install tor
	$ chromium-browser --proxy-server=socks5://localhost:9050

	+ Pomodoro:
	
	$ sudo apt-get install python-matplotlib
	$ sudo pip install pomodoro-cli
	$ sudo pip install configparser
	$ sudo apt-get install python-gi-cairo

	$ pomodoro 25 5 --timer=True 
	
	$ sudo apt install pyqt5-dev
	$ pomodoro 25 5 --timer=True --notif=True --alarm=False

	pomostat overall
	pomostat week
	pomostat thisweek
	pomostat lastweek
	pomostat week --weekof='2018-01-01'
	pomostat stats
	pomostat weeks
	pomostat today
	pomostat yesterday

	+ sdkman:
	$ curl -s "https://get.sdkman.io" | bash
	$ source "$HOME/.sdkman/bin/sdkman-init.sh"
	$ sdk version

	$ sdk install sbt

	+ Permisos para convertir unir imgágenes a pdf:
	$ $ sudo vim /etc/ImageMagick-6/policy.xml 
	Agregar antes de "</policymap>"
		<policy domain="coder" rights="read | write" pattern="PDF" />

	$ convert a.jpeg b.jpeg PL_CNEL_MAN_1105133970_2021.pdf carlos_perez.pdf

	+ netsurf:
	Instalar desde fuentes
	$ sudo apt install bison flex gperf
	$ sudo apt install libcurl4-gnutls-dev
	$ sudo apt install libgtk2.0-dev
	$ sudo apt install libjpeg-dev

	HTML/Entities.pm 
	https://linuxhint.com/install_perl_modules_debian_linux/?__cf_chl_managed_tk__=pmd_J_NV.O2X2IGD4EPc2kKxpWHq7lMrhGlPsCuh9Wc8rlU-1629393118-0-gqNtZGzNAuWjcnBszQh9

	$ sudo apt install perl-doc libpath-tiny-perl
	$ cpan [yes] enter
	cpan[1] > install HTML::Entities
	$ sudo cpan -i HTML::Entities

	~/Downloads/netsurf/netsurf-all-3.10 $ make

	+ kweb:
	sudo apt install libwebkitgtk-3.0-dev
	https://github.com/ekapujiw2002/kweb
	pi@raspberrypi:~/Downloads/kweb-master $ sudo make install
	sudo install -g dialout kweb /usr/bin
	sudo cp ./kweb.desktop /usr/share/applications
	sudo cp ./minimalkioskbrowser.png /usr/share/pixmaps
	sudo cp ./kweb.1.gz /usr/share/man/man1
	sudo cp ./kwebhelper.py /usr/local/bin
	sudo chmod +x /usr/local/bin/kwebhelper.py
	sudo cp ./kwebhelper_settings.py /usr/local/bin
	sudo chmod +x /usr/local/bin/kwebhelper_settings.

	+ mysql:
	https://pimylifeup.com/raspberry-pi-mysql/
	https://raspberrytips.com/install-mariadb-raspberry-pi/

	$ sudo apt install mariadb-server
	$ sudo mysql_secure_installation
	$ sudo mysql -u root -p
	CREATE DATABASE oms;
	GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost' IDENTIFIED BY 'root' WITH GRANT OPTION;

	+ markdown:
	https://www.markdownguide.org/basic-syntax/
